#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BetStatsAssist.Classes
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BetStatsAssistDB")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertFIXTURE(FIXTURE instance);
    partial void UpdateFIXTURE(FIXTURE instance);
    partial void DeleteFIXTURE(FIXTURE instance);
    partial void InsertTEAM_LEAGUE_STAT(TEAM_LEAGUE_STAT instance);
    partial void UpdateTEAM_LEAGUE_STAT(TEAM_LEAGUE_STAT instance);
    partial void DeleteTEAM_LEAGUE_STAT(TEAM_LEAGUE_STAT instance);
    partial void InsertTEAM(TEAM instance);
    partial void UpdateTEAM(TEAM instance);
    partial void DeleteTEAM(TEAM instance);
    partial void InsertLEAGUE(LEAGUE instance);
    partial void UpdateLEAGUE(LEAGUE instance);
    partial void DeleteLEAGUE(LEAGUE instance);
    #endregion
		
		public DataClassesDataContext() : 
				base(global::BetStatsAssist.Properties.Settings.Default.BetStatsAssistDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<FIXTURE> FIXTUREs
		{
			get
			{
				return this.GetTable<FIXTURE>();
			}
		}
		
		public System.Data.Linq.Table<TEAM_LEAGUE_STAT> TEAM_LEAGUE_STATs
		{
			get
			{
				return this.GetTable<TEAM_LEAGUE_STAT>();
			}
		}
		
		public System.Data.Linq.Table<TEAM> TEAMs
		{
			get
			{
				return this.GetTable<TEAM>();
			}
		}
		
		public System.Data.Linq.Table<LEAGUE> LEAGUEs
		{
			get
			{
				return this.GetTable<LEAGUE>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FIXTURES")]
	public partial class FIXTURE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _API_FIXTURE_ID;
		
		private System.Nullable<System.DateTime> _FIX_DATE;
		
		private System.Nullable<int> _LEAGUE_ID;
		
		private System.Nullable<int> _LEAGUE_ROUND;
		
		private System.Nullable<int> _H_TEAM_ID;
		
		private System.Nullable<int> _H_CORNERS;
		
		private System.Nullable<int> _H_GOALS;
		
		private System.Nullable<int> _HALFTIME_H_GOALS;
		
		private System.Nullable<int> _H_SHOTS;
		
		private System.Nullable<int> _H_SHOTS_ON_T;
		
		private System.Nullable<int> _H_FOULS;
		
		private System.Nullable<int> _H_Y_CARDS;
		
		private System.Nullable<int> _H_R_CARDS;
		
		private System.Nullable<int> _A_TEAM_ID;
		
		private System.Nullable<int> _A_CORNERS;
		
		private System.Nullable<int> _A_GOALS;
		
		private System.Nullable<int> _HALFTIME_A_GOALS;
		
		private System.Nullable<int> _A_SHOTS;
		
		private System.Nullable<int> _A_SHOTS_ON_T;
		
		private System.Nullable<int> _A_FOULS;
		
		private System.Nullable<int> _AWAY_Y_CARDS;
		
		private System.Nullable<int> _AWAY_R_CARDS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAPI_FIXTURE_IDChanging(int value);
    partial void OnAPI_FIXTURE_IDChanged();
    partial void OnFIX_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnFIX_DATEChanged();
    partial void OnLEAGUE_IDChanging(System.Nullable<int> value);
    partial void OnLEAGUE_IDChanged();
    partial void OnLEAGUE_ROUNDChanging(System.Nullable<int> value);
    partial void OnLEAGUE_ROUNDChanged();
    partial void OnH_TEAM_IDChanging(System.Nullable<int> value);
    partial void OnH_TEAM_IDChanged();
    partial void OnH_CORNERSChanging(System.Nullable<int> value);
    partial void OnH_CORNERSChanged();
    partial void OnH_GOALSChanging(System.Nullable<int> value);
    partial void OnH_GOALSChanged();
    partial void OnHALFTIME_H_GOALSChanging(System.Nullable<int> value);
    partial void OnHALFTIME_H_GOALSChanged();
    partial void OnH_SHOTSChanging(System.Nullable<int> value);
    partial void OnH_SHOTSChanged();
    partial void OnH_SHOTS_ON_TChanging(System.Nullable<int> value);
    partial void OnH_SHOTS_ON_TChanged();
    partial void OnH_FOULSChanging(System.Nullable<int> value);
    partial void OnH_FOULSChanged();
    partial void OnH_Y_CARDSChanging(System.Nullable<int> value);
    partial void OnH_Y_CARDSChanged();
    partial void OnH_R_CARDSChanging(System.Nullable<int> value);
    partial void OnH_R_CARDSChanged();
    partial void OnA_TEAM_IDChanging(System.Nullable<int> value);
    partial void OnA_TEAM_IDChanged();
    partial void OnA_CORNERSChanging(System.Nullable<int> value);
    partial void OnA_CORNERSChanged();
    partial void OnA_GOALSChanging(System.Nullable<int> value);
    partial void OnA_GOALSChanged();
    partial void OnHALFTIME_A_GOALSChanging(System.Nullable<int> value);
    partial void OnHALFTIME_A_GOALSChanged();
    partial void OnA_SHOTSChanging(System.Nullable<int> value);
    partial void OnA_SHOTSChanged();
    partial void OnA_SHOTS_ON_TChanging(System.Nullable<int> value);
    partial void OnA_SHOTS_ON_TChanged();
    partial void OnA_FOULSChanging(System.Nullable<int> value);
    partial void OnA_FOULSChanged();
    partial void OnAWAY_Y_CARDSChanging(System.Nullable<int> value);
    partial void OnAWAY_Y_CARDSChanged();
    partial void OnAWAY_R_CARDSChanging(System.Nullable<int> value);
    partial void OnAWAY_R_CARDSChanged();
    #endregion
		
		public FIXTURE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_API_FIXTURE_ID", DbType="Int NOT NULL")]
		public int API_FIXTURE_ID
		{
			get
			{
				return this._API_FIXTURE_ID;
			}
			set
			{
				if ((this._API_FIXTURE_ID != value))
				{
					this.OnAPI_FIXTURE_IDChanging(value);
					this.SendPropertyChanging();
					this._API_FIXTURE_ID = value;
					this.SendPropertyChanged("API_FIXTURE_ID");
					this.OnAPI_FIXTURE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FIX_DATE", DbType="Date")]
		public System.Nullable<System.DateTime> FIX_DATE
		{
			get
			{
				return this._FIX_DATE;
			}
			set
			{
				if ((this._FIX_DATE != value))
				{
					this.OnFIX_DATEChanging(value);
					this.SendPropertyChanging();
					this._FIX_DATE = value;
					this.SendPropertyChanged("FIX_DATE");
					this.OnFIX_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LEAGUE_ID", DbType="Int")]
		public System.Nullable<int> LEAGUE_ID
		{
			get
			{
				return this._LEAGUE_ID;
			}
			set
			{
				if ((this._LEAGUE_ID != value))
				{
					this.OnLEAGUE_IDChanging(value);
					this.SendPropertyChanging();
					this._LEAGUE_ID = value;
					this.SendPropertyChanged("LEAGUE_ID");
					this.OnLEAGUE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LEAGUE_ROUND", DbType="Int")]
		public System.Nullable<int> LEAGUE_ROUND
		{
			get
			{
				return this._LEAGUE_ROUND;
			}
			set
			{
				if ((this._LEAGUE_ROUND != value))
				{
					this.OnLEAGUE_ROUNDChanging(value);
					this.SendPropertyChanging();
					this._LEAGUE_ROUND = value;
					this.SendPropertyChanged("LEAGUE_ROUND");
					this.OnLEAGUE_ROUNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H_TEAM_ID", DbType="Int")]
		public System.Nullable<int> H_TEAM_ID
		{
			get
			{
				return this._H_TEAM_ID;
			}
			set
			{
				if ((this._H_TEAM_ID != value))
				{
					this.OnH_TEAM_IDChanging(value);
					this.SendPropertyChanging();
					this._H_TEAM_ID = value;
					this.SendPropertyChanged("H_TEAM_ID");
					this.OnH_TEAM_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H_CORNERS", DbType="Int")]
		public System.Nullable<int> H_CORNERS
		{
			get
			{
				return this._H_CORNERS;
			}
			set
			{
				if ((this._H_CORNERS != value))
				{
					this.OnH_CORNERSChanging(value);
					this.SendPropertyChanging();
					this._H_CORNERS = value;
					this.SendPropertyChanged("H_CORNERS");
					this.OnH_CORNERSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H_GOALS", DbType="Int")]
		public System.Nullable<int> H_GOALS
		{
			get
			{
				return this._H_GOALS;
			}
			set
			{
				if ((this._H_GOALS != value))
				{
					this.OnH_GOALSChanging(value);
					this.SendPropertyChanging();
					this._H_GOALS = value;
					this.SendPropertyChanged("H_GOALS");
					this.OnH_GOALSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HALFTIME_H_GOALS", DbType="Int")]
		public System.Nullable<int> HALFTIME_H_GOALS
		{
			get
			{
				return this._HALFTIME_H_GOALS;
			}
			set
			{
				if ((this._HALFTIME_H_GOALS != value))
				{
					this.OnHALFTIME_H_GOALSChanging(value);
					this.SendPropertyChanging();
					this._HALFTIME_H_GOALS = value;
					this.SendPropertyChanged("HALFTIME_H_GOALS");
					this.OnHALFTIME_H_GOALSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H_SHOTS", DbType="Int")]
		public System.Nullable<int> H_SHOTS
		{
			get
			{
				return this._H_SHOTS;
			}
			set
			{
				if ((this._H_SHOTS != value))
				{
					this.OnH_SHOTSChanging(value);
					this.SendPropertyChanging();
					this._H_SHOTS = value;
					this.SendPropertyChanged("H_SHOTS");
					this.OnH_SHOTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H_SHOTS_ON_T", DbType="Int")]
		public System.Nullable<int> H_SHOTS_ON_T
		{
			get
			{
				return this._H_SHOTS_ON_T;
			}
			set
			{
				if ((this._H_SHOTS_ON_T != value))
				{
					this.OnH_SHOTS_ON_TChanging(value);
					this.SendPropertyChanging();
					this._H_SHOTS_ON_T = value;
					this.SendPropertyChanged("H_SHOTS_ON_T");
					this.OnH_SHOTS_ON_TChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H_FOULS", DbType="Int")]
		public System.Nullable<int> H_FOULS
		{
			get
			{
				return this._H_FOULS;
			}
			set
			{
				if ((this._H_FOULS != value))
				{
					this.OnH_FOULSChanging(value);
					this.SendPropertyChanging();
					this._H_FOULS = value;
					this.SendPropertyChanged("H_FOULS");
					this.OnH_FOULSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H_Y_CARDS", DbType="Int")]
		public System.Nullable<int> H_Y_CARDS
		{
			get
			{
				return this._H_Y_CARDS;
			}
			set
			{
				if ((this._H_Y_CARDS != value))
				{
					this.OnH_Y_CARDSChanging(value);
					this.SendPropertyChanging();
					this._H_Y_CARDS = value;
					this.SendPropertyChanged("H_Y_CARDS");
					this.OnH_Y_CARDSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H_R_CARDS", DbType="Int")]
		public System.Nullable<int> H_R_CARDS
		{
			get
			{
				return this._H_R_CARDS;
			}
			set
			{
				if ((this._H_R_CARDS != value))
				{
					this.OnH_R_CARDSChanging(value);
					this.SendPropertyChanging();
					this._H_R_CARDS = value;
					this.SendPropertyChanged("H_R_CARDS");
					this.OnH_R_CARDSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A_TEAM_ID", DbType="Int")]
		public System.Nullable<int> A_TEAM_ID
		{
			get
			{
				return this._A_TEAM_ID;
			}
			set
			{
				if ((this._A_TEAM_ID != value))
				{
					this.OnA_TEAM_IDChanging(value);
					this.SendPropertyChanging();
					this._A_TEAM_ID = value;
					this.SendPropertyChanged("A_TEAM_ID");
					this.OnA_TEAM_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A_CORNERS", DbType="Int")]
		public System.Nullable<int> A_CORNERS
		{
			get
			{
				return this._A_CORNERS;
			}
			set
			{
				if ((this._A_CORNERS != value))
				{
					this.OnA_CORNERSChanging(value);
					this.SendPropertyChanging();
					this._A_CORNERS = value;
					this.SendPropertyChanged("A_CORNERS");
					this.OnA_CORNERSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A_GOALS", DbType="Int")]
		public System.Nullable<int> A_GOALS
		{
			get
			{
				return this._A_GOALS;
			}
			set
			{
				if ((this._A_GOALS != value))
				{
					this.OnA_GOALSChanging(value);
					this.SendPropertyChanging();
					this._A_GOALS = value;
					this.SendPropertyChanged("A_GOALS");
					this.OnA_GOALSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HALFTIME_A_GOALS", DbType="Int")]
		public System.Nullable<int> HALFTIME_A_GOALS
		{
			get
			{
				return this._HALFTIME_A_GOALS;
			}
			set
			{
				if ((this._HALFTIME_A_GOALS != value))
				{
					this.OnHALFTIME_A_GOALSChanging(value);
					this.SendPropertyChanging();
					this._HALFTIME_A_GOALS = value;
					this.SendPropertyChanged("HALFTIME_A_GOALS");
					this.OnHALFTIME_A_GOALSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A_SHOTS", DbType="Int")]
		public System.Nullable<int> A_SHOTS
		{
			get
			{
				return this._A_SHOTS;
			}
			set
			{
				if ((this._A_SHOTS != value))
				{
					this.OnA_SHOTSChanging(value);
					this.SendPropertyChanging();
					this._A_SHOTS = value;
					this.SendPropertyChanged("A_SHOTS");
					this.OnA_SHOTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A_SHOTS_ON_T", DbType="Int")]
		public System.Nullable<int> A_SHOTS_ON_T
		{
			get
			{
				return this._A_SHOTS_ON_T;
			}
			set
			{
				if ((this._A_SHOTS_ON_T != value))
				{
					this.OnA_SHOTS_ON_TChanging(value);
					this.SendPropertyChanging();
					this._A_SHOTS_ON_T = value;
					this.SendPropertyChanged("A_SHOTS_ON_T");
					this.OnA_SHOTS_ON_TChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A_FOULS", DbType="Int")]
		public System.Nullable<int> A_FOULS
		{
			get
			{
				return this._A_FOULS;
			}
			set
			{
				if ((this._A_FOULS != value))
				{
					this.OnA_FOULSChanging(value);
					this.SendPropertyChanging();
					this._A_FOULS = value;
					this.SendPropertyChanged("A_FOULS");
					this.OnA_FOULSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AWAY_Y_CARDS", DbType="Int")]
		public System.Nullable<int> AWAY_Y_CARDS
		{
			get
			{
				return this._AWAY_Y_CARDS;
			}
			set
			{
				if ((this._AWAY_Y_CARDS != value))
				{
					this.OnAWAY_Y_CARDSChanging(value);
					this.SendPropertyChanging();
					this._AWAY_Y_CARDS = value;
					this.SendPropertyChanged("AWAY_Y_CARDS");
					this.OnAWAY_Y_CARDSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AWAY_R_CARDS", DbType="Int")]
		public System.Nullable<int> AWAY_R_CARDS
		{
			get
			{
				return this._AWAY_R_CARDS;
			}
			set
			{
				if ((this._AWAY_R_CARDS != value))
				{
					this.OnAWAY_R_CARDSChanging(value);
					this.SendPropertyChanging();
					this._AWAY_R_CARDS = value;
					this.SendPropertyChanged("AWAY_R_CARDS");
					this.OnAWAY_R_CARDSChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TEAM_LEAGUE_STATS")]
	public partial class TEAM_LEAGUE_STAT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _TEAM_ID;
		
		private int _LEAGUE_ID;
		
		private System.Nullable<double> _FORM_AVER_G_FOR;
		
		private System.Nullable<double> _FORM_AVER_G_AG;
		
		private System.Nullable<double> _TOT_AVER_G_FOR;
		
		private System.Nullable<double> _TOT_AVER_G_AG;
		
		private System.Nullable<double> _FORM_AVER_HOME_G_FOR;
		
		private System.Nullable<double> _FORM_AVER_HOME_G_AG;
		
		private System.Nullable<double> _FORM_AVER_AWAY_G_FOR;
		
		private System.Nullable<double> _FORM_AVER_AWAY_G_AG;
		
		private System.Nullable<double> _TOT_AVER_HOME_G_FOR;
		
		private System.Nullable<double> _TOT_AVER_HOME_G_AG;
		
		private System.Nullable<double> _TOT_AVER_AWAY_G_FOR;
		
		private System.Nullable<double> _TOT_AVER_AWAY_G_AG;
		
		private System.Nullable<int> _FORM_GG;
		
		private System.Nullable<int> _TOT_GG;
		
		private System.Nullable<int> _FORM_OVER;
		
		private System.Nullable<int> _TOT_OVER;
		
		private System.Nullable<double> _FORM_AVER_CARDS;
		
		private System.Nullable<double> _TOT_AVER_CARDS;
		
		private System.Nullable<int> _TOT_R_CARDS;
		
		private System.Nullable<double> _FORM_AVER_SHOTS;
		
		private System.Nullable<double> _FORM_AVER_SHOTS_ON_T;
		
		private System.Nullable<double> _TOT_AVER_SHOTS;
		
		private System.Nullable<double> _TOT_AVER_SHOTS_ON_T;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTEAM_IDChanging(int value);
    partial void OnTEAM_IDChanged();
    partial void OnLEAGUE_IDChanging(int value);
    partial void OnLEAGUE_IDChanged();
    partial void OnFORM_AVER_G_FORChanging(System.Nullable<double> value);
    partial void OnFORM_AVER_G_FORChanged();
    partial void OnFORM_AVER_G_AGChanging(System.Nullable<double> value);
    partial void OnFORM_AVER_G_AGChanged();
    partial void OnTOT_AVER_G_FORChanging(System.Nullable<double> value);
    partial void OnTOT_AVER_G_FORChanged();
    partial void OnTOT_AVER_G_AGChanging(System.Nullable<double> value);
    partial void OnTOT_AVER_G_AGChanged();
    partial void OnFORM_AVER_HOME_G_FORChanging(System.Nullable<double> value);
    partial void OnFORM_AVER_HOME_G_FORChanged();
    partial void OnFORM_AVER_HOME_G_AGChanging(System.Nullable<double> value);
    partial void OnFORM_AVER_HOME_G_AGChanged();
    partial void OnFORM_AVER_AWAY_G_FORChanging(System.Nullable<double> value);
    partial void OnFORM_AVER_AWAY_G_FORChanged();
    partial void OnFORM_AVER_AWAY_G_AGChanging(System.Nullable<double> value);
    partial void OnFORM_AVER_AWAY_G_AGChanged();
    partial void OnTOT_AVER_HOME_G_FORChanging(System.Nullable<double> value);
    partial void OnTOT_AVER_HOME_G_FORChanged();
    partial void OnTOT_AVER_HOME_G_AGChanging(System.Nullable<double> value);
    partial void OnTOT_AVER_HOME_G_AGChanged();
    partial void OnTOT_AVER_AWAY_G_FORChanging(System.Nullable<double> value);
    partial void OnTOT_AVER_AWAY_G_FORChanged();
    partial void OnTOT_AVER_AWAY_G_AGChanging(System.Nullable<double> value);
    partial void OnTOT_AVER_AWAY_G_AGChanged();
    partial void OnFORM_GGChanging(System.Nullable<int> value);
    partial void OnFORM_GGChanged();
    partial void OnTOT_GGChanging(System.Nullable<int> value);
    partial void OnTOT_GGChanged();
    partial void OnFORM_OVERChanging(System.Nullable<int> value);
    partial void OnFORM_OVERChanged();
    partial void OnTOT_OVERChanging(System.Nullable<int> value);
    partial void OnTOT_OVERChanged();
    partial void OnFORM_AVER_CARDSChanging(System.Nullable<double> value);
    partial void OnFORM_AVER_CARDSChanged();
    partial void OnTOT_AVER_CARDSChanging(System.Nullable<double> value);
    partial void OnTOT_AVER_CARDSChanged();
    partial void OnTOT_R_CARDSChanging(System.Nullable<int> value);
    partial void OnTOT_R_CARDSChanged();
    partial void OnFORM_AVER_SHOTSChanging(System.Nullable<double> value);
    partial void OnFORM_AVER_SHOTSChanged();
    partial void OnFORM_AVER_SHOTS_ON_TChanging(System.Nullable<double> value);
    partial void OnFORM_AVER_SHOTS_ON_TChanged();
    partial void OnTOT_AVER_SHOTSChanging(System.Nullable<double> value);
    partial void OnTOT_AVER_SHOTSChanged();
    partial void OnTOT_AVER_SHOTS_ON_TChanging(System.Nullable<double> value);
    partial void OnTOT_AVER_SHOTS_ON_TChanged();
    #endregion
		
		public TEAM_LEAGUE_STAT()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEAM_ID", DbType="Int NOT NULL")]
		public int TEAM_ID
		{
			get
			{
				return this._TEAM_ID;
			}
			set
			{
				if ((this._TEAM_ID != value))
				{
					this.OnTEAM_IDChanging(value);
					this.SendPropertyChanging();
					this._TEAM_ID = value;
					this.SendPropertyChanged("TEAM_ID");
					this.OnTEAM_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LEAGUE_ID", DbType="Int NOT NULL")]
		public int LEAGUE_ID
		{
			get
			{
				return this._LEAGUE_ID;
			}
			set
			{
				if ((this._LEAGUE_ID != value))
				{
					this.OnLEAGUE_IDChanging(value);
					this.SendPropertyChanging();
					this._LEAGUE_ID = value;
					this.SendPropertyChanged("LEAGUE_ID");
					this.OnLEAGUE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FORM_AVER_G_FOR", DbType="Float")]
		public System.Nullable<double> FORM_AVER_G_FOR
		{
			get
			{
				return this._FORM_AVER_G_FOR;
			}
			set
			{
				if ((this._FORM_AVER_G_FOR != value))
				{
					this.OnFORM_AVER_G_FORChanging(value);
					this.SendPropertyChanging();
					this._FORM_AVER_G_FOR = value;
					this.SendPropertyChanged("FORM_AVER_G_FOR");
					this.OnFORM_AVER_G_FORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FORM_AVER_G_AG", DbType="Float")]
		public System.Nullable<double> FORM_AVER_G_AG
		{
			get
			{
				return this._FORM_AVER_G_AG;
			}
			set
			{
				if ((this._FORM_AVER_G_AG != value))
				{
					this.OnFORM_AVER_G_AGChanging(value);
					this.SendPropertyChanging();
					this._FORM_AVER_G_AG = value;
					this.SendPropertyChanged("FORM_AVER_G_AG");
					this.OnFORM_AVER_G_AGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOT_AVER_G_FOR", DbType="Float")]
		public System.Nullable<double> TOT_AVER_G_FOR
		{
			get
			{
				return this._TOT_AVER_G_FOR;
			}
			set
			{
				if ((this._TOT_AVER_G_FOR != value))
				{
					this.OnTOT_AVER_G_FORChanging(value);
					this.SendPropertyChanging();
					this._TOT_AVER_G_FOR = value;
					this.SendPropertyChanged("TOT_AVER_G_FOR");
					this.OnTOT_AVER_G_FORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOT_AVER_G_AG", DbType="Float")]
		public System.Nullable<double> TOT_AVER_G_AG
		{
			get
			{
				return this._TOT_AVER_G_AG;
			}
			set
			{
				if ((this._TOT_AVER_G_AG != value))
				{
					this.OnTOT_AVER_G_AGChanging(value);
					this.SendPropertyChanging();
					this._TOT_AVER_G_AG = value;
					this.SendPropertyChanged("TOT_AVER_G_AG");
					this.OnTOT_AVER_G_AGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FORM_AVER_HOME_G_FOR", DbType="Float")]
		public System.Nullable<double> FORM_AVER_HOME_G_FOR
		{
			get
			{
				return this._FORM_AVER_HOME_G_FOR;
			}
			set
			{
				if ((this._FORM_AVER_HOME_G_FOR != value))
				{
					this.OnFORM_AVER_HOME_G_FORChanging(value);
					this.SendPropertyChanging();
					this._FORM_AVER_HOME_G_FOR = value;
					this.SendPropertyChanged("FORM_AVER_HOME_G_FOR");
					this.OnFORM_AVER_HOME_G_FORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FORM_AVER_HOME_G_AG", DbType="Float")]
		public System.Nullable<double> FORM_AVER_HOME_G_AG
		{
			get
			{
				return this._FORM_AVER_HOME_G_AG;
			}
			set
			{
				if ((this._FORM_AVER_HOME_G_AG != value))
				{
					this.OnFORM_AVER_HOME_G_AGChanging(value);
					this.SendPropertyChanging();
					this._FORM_AVER_HOME_G_AG = value;
					this.SendPropertyChanged("FORM_AVER_HOME_G_AG");
					this.OnFORM_AVER_HOME_G_AGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FORM_AVER_AWAY_G_FOR", DbType="Float")]
		public System.Nullable<double> FORM_AVER_AWAY_G_FOR
		{
			get
			{
				return this._FORM_AVER_AWAY_G_FOR;
			}
			set
			{
				if ((this._FORM_AVER_AWAY_G_FOR != value))
				{
					this.OnFORM_AVER_AWAY_G_FORChanging(value);
					this.SendPropertyChanging();
					this._FORM_AVER_AWAY_G_FOR = value;
					this.SendPropertyChanged("FORM_AVER_AWAY_G_FOR");
					this.OnFORM_AVER_AWAY_G_FORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FORM_AVER_AWAY_G_AG", DbType="Float")]
		public System.Nullable<double> FORM_AVER_AWAY_G_AG
		{
			get
			{
				return this._FORM_AVER_AWAY_G_AG;
			}
			set
			{
				if ((this._FORM_AVER_AWAY_G_AG != value))
				{
					this.OnFORM_AVER_AWAY_G_AGChanging(value);
					this.SendPropertyChanging();
					this._FORM_AVER_AWAY_G_AG = value;
					this.SendPropertyChanged("FORM_AVER_AWAY_G_AG");
					this.OnFORM_AVER_AWAY_G_AGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOT_AVER_HOME_G_FOR", DbType="Float")]
		public System.Nullable<double> TOT_AVER_HOME_G_FOR
		{
			get
			{
				return this._TOT_AVER_HOME_G_FOR;
			}
			set
			{
				if ((this._TOT_AVER_HOME_G_FOR != value))
				{
					this.OnTOT_AVER_HOME_G_FORChanging(value);
					this.SendPropertyChanging();
					this._TOT_AVER_HOME_G_FOR = value;
					this.SendPropertyChanged("TOT_AVER_HOME_G_FOR");
					this.OnTOT_AVER_HOME_G_FORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOT_AVER_HOME_G_AG", DbType="Float")]
		public System.Nullable<double> TOT_AVER_HOME_G_AG
		{
			get
			{
				return this._TOT_AVER_HOME_G_AG;
			}
			set
			{
				if ((this._TOT_AVER_HOME_G_AG != value))
				{
					this.OnTOT_AVER_HOME_G_AGChanging(value);
					this.SendPropertyChanging();
					this._TOT_AVER_HOME_G_AG = value;
					this.SendPropertyChanged("TOT_AVER_HOME_G_AG");
					this.OnTOT_AVER_HOME_G_AGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOT_AVER_AWAY_G_FOR", DbType="Float")]
		public System.Nullable<double> TOT_AVER_AWAY_G_FOR
		{
			get
			{
				return this._TOT_AVER_AWAY_G_FOR;
			}
			set
			{
				if ((this._TOT_AVER_AWAY_G_FOR != value))
				{
					this.OnTOT_AVER_AWAY_G_FORChanging(value);
					this.SendPropertyChanging();
					this._TOT_AVER_AWAY_G_FOR = value;
					this.SendPropertyChanged("TOT_AVER_AWAY_G_FOR");
					this.OnTOT_AVER_AWAY_G_FORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOT_AVER_AWAY_G_AG", DbType="Float")]
		public System.Nullable<double> TOT_AVER_AWAY_G_AG
		{
			get
			{
				return this._TOT_AVER_AWAY_G_AG;
			}
			set
			{
				if ((this._TOT_AVER_AWAY_G_AG != value))
				{
					this.OnTOT_AVER_AWAY_G_AGChanging(value);
					this.SendPropertyChanging();
					this._TOT_AVER_AWAY_G_AG = value;
					this.SendPropertyChanged("TOT_AVER_AWAY_G_AG");
					this.OnTOT_AVER_AWAY_G_AGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FORM_GG", DbType="Int")]
		public System.Nullable<int> FORM_GG
		{
			get
			{
				return this._FORM_GG;
			}
			set
			{
				if ((this._FORM_GG != value))
				{
					this.OnFORM_GGChanging(value);
					this.SendPropertyChanging();
					this._FORM_GG = value;
					this.SendPropertyChanged("FORM_GG");
					this.OnFORM_GGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOT_GG", DbType="Int")]
		public System.Nullable<int> TOT_GG
		{
			get
			{
				return this._TOT_GG;
			}
			set
			{
				if ((this._TOT_GG != value))
				{
					this.OnTOT_GGChanging(value);
					this.SendPropertyChanging();
					this._TOT_GG = value;
					this.SendPropertyChanged("TOT_GG");
					this.OnTOT_GGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FORM_OVER", DbType="Int")]
		public System.Nullable<int> FORM_OVER
		{
			get
			{
				return this._FORM_OVER;
			}
			set
			{
				if ((this._FORM_OVER != value))
				{
					this.OnFORM_OVERChanging(value);
					this.SendPropertyChanging();
					this._FORM_OVER = value;
					this.SendPropertyChanged("FORM_OVER");
					this.OnFORM_OVERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOT_OVER", DbType="Int")]
		public System.Nullable<int> TOT_OVER
		{
			get
			{
				return this._TOT_OVER;
			}
			set
			{
				if ((this._TOT_OVER != value))
				{
					this.OnTOT_OVERChanging(value);
					this.SendPropertyChanging();
					this._TOT_OVER = value;
					this.SendPropertyChanged("TOT_OVER");
					this.OnTOT_OVERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FORM_AVER_CARDS", DbType="Float")]
		public System.Nullable<double> FORM_AVER_CARDS
		{
			get
			{
				return this._FORM_AVER_CARDS;
			}
			set
			{
				if ((this._FORM_AVER_CARDS != value))
				{
					this.OnFORM_AVER_CARDSChanging(value);
					this.SendPropertyChanging();
					this._FORM_AVER_CARDS = value;
					this.SendPropertyChanged("FORM_AVER_CARDS");
					this.OnFORM_AVER_CARDSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOT_AVER_CARDS", DbType="Float")]
		public System.Nullable<double> TOT_AVER_CARDS
		{
			get
			{
				return this._TOT_AVER_CARDS;
			}
			set
			{
				if ((this._TOT_AVER_CARDS != value))
				{
					this.OnTOT_AVER_CARDSChanging(value);
					this.SendPropertyChanging();
					this._TOT_AVER_CARDS = value;
					this.SendPropertyChanged("TOT_AVER_CARDS");
					this.OnTOT_AVER_CARDSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOT_R_CARDS", DbType="Int")]
		public System.Nullable<int> TOT_R_CARDS
		{
			get
			{
				return this._TOT_R_CARDS;
			}
			set
			{
				if ((this._TOT_R_CARDS != value))
				{
					this.OnTOT_R_CARDSChanging(value);
					this.SendPropertyChanging();
					this._TOT_R_CARDS = value;
					this.SendPropertyChanged("TOT_R_CARDS");
					this.OnTOT_R_CARDSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FORM_AVER_SHOTS", DbType="Float")]
		public System.Nullable<double> FORM_AVER_SHOTS
		{
			get
			{
				return this._FORM_AVER_SHOTS;
			}
			set
			{
				if ((this._FORM_AVER_SHOTS != value))
				{
					this.OnFORM_AVER_SHOTSChanging(value);
					this.SendPropertyChanging();
					this._FORM_AVER_SHOTS = value;
					this.SendPropertyChanged("FORM_AVER_SHOTS");
					this.OnFORM_AVER_SHOTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FORM_AVER_SHOTS_ON_T", DbType="Float")]
		public System.Nullable<double> FORM_AVER_SHOTS_ON_T
		{
			get
			{
				return this._FORM_AVER_SHOTS_ON_T;
			}
			set
			{
				if ((this._FORM_AVER_SHOTS_ON_T != value))
				{
					this.OnFORM_AVER_SHOTS_ON_TChanging(value);
					this.SendPropertyChanging();
					this._FORM_AVER_SHOTS_ON_T = value;
					this.SendPropertyChanged("FORM_AVER_SHOTS_ON_T");
					this.OnFORM_AVER_SHOTS_ON_TChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOT_AVER_SHOTS", DbType="Float")]
		public System.Nullable<double> TOT_AVER_SHOTS
		{
			get
			{
				return this._TOT_AVER_SHOTS;
			}
			set
			{
				if ((this._TOT_AVER_SHOTS != value))
				{
					this.OnTOT_AVER_SHOTSChanging(value);
					this.SendPropertyChanging();
					this._TOT_AVER_SHOTS = value;
					this.SendPropertyChanged("TOT_AVER_SHOTS");
					this.OnTOT_AVER_SHOTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOT_AVER_SHOTS_ON_T", DbType="Float")]
		public System.Nullable<double> TOT_AVER_SHOTS_ON_T
		{
			get
			{
				return this._TOT_AVER_SHOTS_ON_T;
			}
			set
			{
				if ((this._TOT_AVER_SHOTS_ON_T != value))
				{
					this.OnTOT_AVER_SHOTS_ON_TChanging(value);
					this.SendPropertyChanging();
					this._TOT_AVER_SHOTS_ON_T = value;
					this.SendPropertyChanged("TOT_AVER_SHOTS_ON_T");
					this.OnTOT_AVER_SHOTS_ON_TChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TEAMS")]
	public partial class TEAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _API_TEAM_ID;
		
		private string _TEAM_NAME;
		
		private string _COUNTRY;
		
		private string _STADIUM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAPI_TEAM_IDChanging(int value);
    partial void OnAPI_TEAM_IDChanged();
    partial void OnTEAM_NAMEChanging(string value);
    partial void OnTEAM_NAMEChanged();
    partial void OnCOUNTRYChanging(string value);
    partial void OnCOUNTRYChanged();
    partial void OnSTADIUMChanging(string value);
    partial void OnSTADIUMChanged();
    #endregion
		
		public TEAM()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_API_TEAM_ID", DbType="Int NOT NULL")]
		public int API_TEAM_ID
		{
			get
			{
				return this._API_TEAM_ID;
			}
			set
			{
				if ((this._API_TEAM_ID != value))
				{
					this.OnAPI_TEAM_IDChanging(value);
					this.SendPropertyChanging();
					this._API_TEAM_ID = value;
					this.SendPropertyChanged("API_TEAM_ID");
					this.OnAPI_TEAM_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEAM_NAME", DbType="VarChar(100)")]
		public string TEAM_NAME
		{
			get
			{
				return this._TEAM_NAME;
			}
			set
			{
				if ((this._TEAM_NAME != value))
				{
					this.OnTEAM_NAMEChanging(value);
					this.SendPropertyChanging();
					this._TEAM_NAME = value;
					this.SendPropertyChanged("TEAM_NAME");
					this.OnTEAM_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COUNTRY", DbType="VarChar(100)")]
		public string COUNTRY
		{
			get
			{
				return this._COUNTRY;
			}
			set
			{
				if ((this._COUNTRY != value))
				{
					this.OnCOUNTRYChanging(value);
					this.SendPropertyChanging();
					this._COUNTRY = value;
					this.SendPropertyChanged("COUNTRY");
					this.OnCOUNTRYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STADIUM", DbType="VarChar(100)")]
		public string STADIUM
		{
			get
			{
				return this._STADIUM;
			}
			set
			{
				if ((this._STADIUM != value))
				{
					this.OnSTADIUMChanging(value);
					this.SendPropertyChanging();
					this._STADIUM = value;
					this.SendPropertyChanged("STADIUM");
					this.OnSTADIUMChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LEAGUES")]
	public partial class LEAGUE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _API_LEAGUE_ID;
		
		private string _SEASON;
		
		private System.Nullable<System.DateTime> _LATEST_MATCH_DATE;
		
		private string _COUNTRY;
		
		private string _LEAGUE_NAME;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAPI_LEAGUE_IDChanging(int value);
    partial void OnAPI_LEAGUE_IDChanged();
    partial void OnSEASONChanging(string value);
    partial void OnSEASONChanged();
    partial void OnLATEST_MATCH_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnLATEST_MATCH_DATEChanged();
    partial void OnCOUNTRYChanging(string value);
    partial void OnCOUNTRYChanged();
    partial void OnLEAGUE_NAMEChanging(string value);
    partial void OnLEAGUE_NAMEChanged();
    #endregion
		
		public LEAGUE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_API_LEAGUE_ID", DbType="Int NOT NULL")]
		public int API_LEAGUE_ID
		{
			get
			{
				return this._API_LEAGUE_ID;
			}
			set
			{
				if ((this._API_LEAGUE_ID != value))
				{
					this.OnAPI_LEAGUE_IDChanging(value);
					this.SendPropertyChanging();
					this._API_LEAGUE_ID = value;
					this.SendPropertyChanged("API_LEAGUE_ID");
					this.OnAPI_LEAGUE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SEASON", DbType="NVarChar(50)")]
		public string SEASON
		{
			get
			{
				return this._SEASON;
			}
			set
			{
				if ((this._SEASON != value))
				{
					this.OnSEASONChanging(value);
					this.SendPropertyChanging();
					this._SEASON = value;
					this.SendPropertyChanged("SEASON");
					this.OnSEASONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LATEST_MATCH_DATE", DbType="Date")]
		public System.Nullable<System.DateTime> LATEST_MATCH_DATE
		{
			get
			{
				return this._LATEST_MATCH_DATE;
			}
			set
			{
				if ((this._LATEST_MATCH_DATE != value))
				{
					this.OnLATEST_MATCH_DATEChanging(value);
					this.SendPropertyChanging();
					this._LATEST_MATCH_DATE = value;
					this.SendPropertyChanged("LATEST_MATCH_DATE");
					this.OnLATEST_MATCH_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COUNTRY", DbType="NVarChar(50)")]
		public string COUNTRY
		{
			get
			{
				return this._COUNTRY;
			}
			set
			{
				if ((this._COUNTRY != value))
				{
					this.OnCOUNTRYChanging(value);
					this.SendPropertyChanging();
					this._COUNTRY = value;
					this.SendPropertyChanged("COUNTRY");
					this.OnCOUNTRYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LEAGUE_NAME", DbType="NVarChar(50)")]
		public string LEAGUE_NAME
		{
			get
			{
				return this._LEAGUE_NAME;
			}
			set
			{
				if ((this._LEAGUE_NAME != value))
				{
					this.OnLEAGUE_NAMEChanging(value);
					this.SendPropertyChanging();
					this._LEAGUE_NAME = value;
					this.SendPropertyChanged("LEAGUE_NAME");
					this.OnLEAGUE_NAMEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
